pipeline {
    agent any
    tools { 
        maven 'Maven'
    }
    stages {
    	stage ('Initialize') { // hello Jenkins
            steps {	
                sh '''
                    echo "Hello from Jenkins"
                ''' 
	    }
        }
        stage('Build') {     // build the project ./RiskMeter without runing any test  
        	steps{
    			sh "mvn -DskipTests -f ./RiskMeter package"
    		}
        }
       stage('unit Test') {
            steps {
                sh 'mvn -f ./RiskMeter -Dtest=!App* test'
            }
	}
	stage('push test results and merge with main branch') {
		steps{
			withCredentials([usernamePassword(credentialsId: '4224a225-4442-4e6c-8cc5-a897366db34a', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')])
			{
			  sh '''
			  	git config --local credential.helper "!f() { echo username=\\$GIT_USERNAME; echo password=\\$GIT_PASSWORD; }; f"
				git add ./RiskMeter/target/surefire-reports/TEST-com.uregina.app.PatientTest.xml
				git add ./RiskMeter/target/surefire-reports/com.uregina.app.PatientTest.txt
				git commit -m 'update tests' 
				git rebase --continue
				git push origin HEAD:Patient_branch
				git checkout -f Patient_branch
				git pull origin Patient_branch
				git checkout -f main
				git pull origin main
				git merge Patient_branch
			     '''
			}
		}
	}
    }
}
	/*
	stage('integration Test') {
            steps {
                sh 'mvn -f ./RiskMeter -Dtest=App* test'
            }
	}
	stage('deploy to docker')
	{
		steps{
		


			
				sh " docker build -t goergedaoud/test:myimage2 ."
				sh " docker images"
				script {
                    docker.withRegistry( '', '121a2089-cb31-4727-9787-f94dc66aaaa1' ) {
                        sh " docker push goergedaoud/test:myimage2 "
                    }
                } 
                        
              
				
				}
	}
	
	stage('run')
	{
		steps{
			echo 'sh "java -cp ./RiskMeter/target/RiskMeter-1.0-SNAPSHOT.jar com.uregina.app.App"'
		}
	}
  }
} 

*/
