pipeline {
    agent any
    tools { 
        maven 'Maven'
	//Docker 'docker'
    }
    stages {
    	stage ('Initialize') { // hello Jenkins
            steps {
                sh '''
                    echo "Hello from Jenkins"
		    git checkout -f Patient_branch
		    git pull origin Patient_branch
		    docker --version
                ''' 
            }
        }
        stage('Build') {     // build the project ./RiskMeter without runing any test  
        	steps{
    			sh "mvn -DskipTests -f ./RiskMeter package"
    		}
        }
       stage('unit Test') {
            steps {
                sh 'mvn -f ./RiskMeter -Dtest=!App* test'
            }
	}
	stage('merge with main branch') {steps{
	  sshagent (credentials: ['goergedaoud']){
	  sh '''
		git config --global user.name
		git config --global user.email
		git remote -v
		git add ./RiskMeter/target/surefire-reports/TEST-com.uregina.app.PatientTest.xml
		git add ./RiskMeter/target/surefire-reports/com.uregina.app.PatientTest.txt
		git commit -m 'update delete' 
		git push
		git config --global user.name "goergedaoud"
		git config --global user.email "goergedaoud@gmail.com"
		git remote set-url origin "https://github.com/goergedaoud/ENSE375.git"
		git push
		git checkout -f main
		git pull origin main
		git merge Patient_branch
		git push origin main
		'''
		}
		/*withCredentials([usernamePassword(credentialsId: 'git-pass-credentials-ID', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
    sh("git tag -a some_tag -m 'Jenkins'")
    sh('git push https://${GIT_USERNAME}:${GIT_PASSWORD}@<REPO> --tags')
}*/
            }
	}
	
	stage('integration Test') {
            steps {
                sh 'mvn -f ./RiskMeter -Dtest=App* test'
            }
	}
	stage('deploy to docker')
	{
		steps{
		


			
				sh " docker build -t goergedaoud/test:myimage2 ."
				sh " docker images"
				script {
                    docker.withRegistry( '', '121a2089-cb31-4727-9787-f94dc66aaaa1' ) {
                        sh " docker push goergedaoud/test:myimage2 "
                    }
                } 
                        
              
				
				}
	}
	
	stage('run')
	{
		steps{
			echo 'sh "java -cp ./RiskMeter/target/RiskMeter-1.0-SNAPSHOT.jar com.uregina.app.App"'
		}
	}
  }
} 

